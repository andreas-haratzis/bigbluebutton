<?xml version="1.0" encoding="utf-8"?>

<!--
  BigBlueButton open source conferencing system - http://www.bigbluebutton.org
  
  Copyright (c) 2010 BigBlueButton Inc. and by respective authors (see below).
  
  BigBlueButton is free software; you can redistribute it and/or modify it under the 
  terms of the GNU Lesser General Public License as published by the Free Software 
  Foundation; either version 2.1 of the License, or (at your option) any later 
  version. 
  
  BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY 
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
  PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public License along 
  with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.
 
  $Id: $
-->

<MDIWindow xmlns="flexlib.mdi.containers.*" 
	       xmlns:mx="http://www.adobe.com/2006/mxml" 
	       xmlns:chat="org.bigbluebutton.modules.chat.views.components.*"
	       implements="org.bigbluebutton.common.IBbbModuleWindow" 
	       creationComplete="onCreationComplete()"
	       xmlns:components="org.bigbluebutton.modules.chat.view.components.*" 
		   xmlns:mate="http://mate.asfusion.com/" 
		   xmlns:views="org.bigbluebutton.modules.chat.views.*"
		   draggable="false"
		   showControls="false"
		   resizable="true">
	
	<mx:Script>
		<![CDATA[
			import org.bigbluebutton.modules.chat.model.ChatOptions;
			import com.asfusion.mate.events.Dispatcher;			
			import flexlib.mdi.events.MDIWindowEvent;			
			import mx.controls.Alert;
			import mx.core.Application;
			import mx.core.FlexGlobals;
			import mx.resources.ResourceBundle;
			import mx.resources.ResourceManager;			
			import org.bigbluebutton.common.events.LocaleChangeEvent;
			import org.bigbluebutton.main.views.MainCanvas;
			import org.bigbluebutton.modules.chat.events.TranscriptEvent;
			import org.bigbluebutton.util.i18n.ResourceUtil;
			import org.bigbluebutton.common.WindowSideTab;
			import org.bigbluebutton.common.Images;
			
			private var _xPosition:int;
			private var _yPosition:int;
			
			private var dispState:String;
			[Bindable] public var chatOptions:ChatOptions;
			
			//enable snap to side with tab button
			private var snapped:Boolean = true;
			private var snapManager:WindowSideTab;
			
			public function getPrefferedPosition():String{
				//return MainCanvas.TOP_RIGHT;
				return chatOptions.position;
			} 
			
			private function onCreationComplete():void {
				/* Set up full screen handler. */
				FlexGlobals.topLevelApplication.stage.addEventListener(FullScreenEvent.FULL_SCREEN, fullScreenHandler);
				dispState = FlexGlobals.topLevelApplication.stage.displayState;
				
				var disp:Dispatcher = new Dispatcher();
				disp.dispatchEvent(new TranscriptEvent(TranscriptEvent.LOAD_TRANSCRIPT));
				
				//add snap button
				if(snapped)
				{
					//create side tab manager
					snapManager = new WindowSideTab();
					//load image
					var images:Images = new Images();
					snapManager.buttonPositionAbsolute = -276/2;	//this button will be in the middle of the
					snapManager.buttonPositionNormalized = 1/2;     //screen, above another button
					snapManager.snapToRight = true;
					snapManager.init(this, images.liveChatButton);
				}
				
			}
			
			private function fullScreenHandler(evt:FullScreenEvent):void {
				dispState = FlexGlobals.topLevelApplication.stage.displayState + " (fullScreen=" + evt.fullScreen.toString() + ")";
				if (evt.fullScreen) {
					chatView.txtMsg.text = "Chat not enabled in full screen mode";
					chatView.txtMsg.enabled = false;
					chatView.sendBtn.enabled = false;
				} else {
					chatView.txtMsg.text = "";
					chatView.txtMsg.enabled = true;
					chatView.sendBtn.enabled = true;
				}
			}		
			
			override protected function resourcesChanged():void{
				super.resourcesChanged();
				this.title = ResourceUtil.getInstance().getString("bbb.chat.title");
			}
			
			private function localeChanged(e:LocaleChangeEvent):void{
				resourcesChanged();
			}
			
		]]>
	</mx:Script>
	
	<views:ChatView id="chatView" chatOptions="{chatOptions}"/>

</MDIWindow>
